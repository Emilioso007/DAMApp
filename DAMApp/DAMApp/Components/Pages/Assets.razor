@page "/dam/assets"
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Components.Forms
@using System.Net.Http.Json

<style>
    body {
        text-align: center;
    }

    h1 {
        margin-bottom: 10px;
    }

    .search-container {
        margin-bottom: 20px;
    }

    {
        width: 80%
    ;
        max-width: 400px
    ;
        padding: 10px
    ;
        font-size: 16px
    ;
        border: 1px solid #ccc
    ;
        border-radius: 5px
    ;
    }

    .gallery {
        margin: 10px;
        display: grid;
        gap: 10px;
        grid-template-columns: repeat(4, 1fr);
    }

    .gallery img {
        width: 20vw;
        height: 20vw; /* Forces square scaling */
        border-radius: 5px;
        object-fit: cover;
        border: 2px solid #000000;
        padding: 1vw;
    }
</style>

<PageTitle>Assets Overview</PageTitle>
<div style="visibility: @(_isLoaded ? "visible" : "hidden")">

    <div>
        <h1>Assets Gallery</h1>
        <InputText @bind-Value="searchText" placeholder="Search for assets"/>
        <InputNumber @bind-Value="size">number of products to show</InputNumber>
        <button @onclick="() => NavigateToPage(pageNumber + 1)">Next Page</button>
        <p>@pageNumber</p>
        <button @onclick="() => NavigateToPage(pageNumber - 1)">Previous page</button>
        <button @onclick="UpdateButton">Update</button>

    </div>

    <div style="text-align: left">
        <button @onclick="NavigateToHome">Back</button>
    </div>

    <div class="gallery" id="imageGrid">
        @foreach (string uuid in imageIds)
        {
            <div class="image-container" @onclick="@(e => SelectId(uuid))">
                <img src='@Navigation.BaseUri+$"api/assets/GetImageByUUID?uuid={uuid}"' alt="Placeholder Image">
                <p>@($"{uuid}")</p>
            </div>
        }
    </div>
</div>

@code {
    private bool DEBUG = true;
    private bool _isLoaded = false;

    private string searchText = "";
    private int size = 20;
    private int pageNumber = 1;
    private List<string> imageIds = new List<string>();
    private HashSet<string> selectedImageIds = new HashSet<string>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Task.Delay(100);
            _isLoaded = true;
            StateHasChanged();
        }
    }

    public void SelectId(string uuid)
    {
        selectedImageIds.Add(uuid);
    }

    public async Task UpdateButton()
    {
        await GetImageIds();
    }

    protected override void OnInitialized()
    {
        var uri = new Uri(Navigation.Uri);
        var queryParams = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);

        if (queryParams.TryGetValue("Page", out var pageNumString))
            pageNumber = int.Parse(pageNumString);
    }

    public void NavigateToHome()
    {
        Navigation.NavigateTo("/", true);
    }

    public void NavigateToPage(int pageNum)
    {
        Navigation.NavigateTo($"/dam/assets?Page={pageNum}", true);
    }

    private async Task GetImageIds()
    {
        try
        {
            HttpClientHandler handler = new HttpClientHandler();
            HttpClient Http = new HttpClient(handler)
            {
                BaseAddress = new Uri("http://localhost:5115/api/v1") // Replace with your API's base URL
            };

            var apiUrl = $"assets/imageIdPile?size={size}&offset={pageNumber}";

            imageIds = await Http.GetFromJsonAsync<List<string>>(apiUrl);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

}

